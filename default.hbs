<!DOCTYPE html>
<html lang="{{@site.locale}}" data-color-pref="dark" data-accent-color="{{@site.accent_color}}" {{#is "home"}}class="scroll-snap"{{/is}}>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{{meta_title}}</title>

        {{! Load scripts to execute before render }}
        <script>
            const colorModePref = document.documentElement.dataset.colorPref;

            const colorModePrefOpposite = colorModePref === 'dark' ? 'light' : 'dark'

            if (
                localStorage.getItem('pref') === colorModePrefOpposite ||
                (window.matchMedia(`(prefers-color-scheme: ${colorModePrefOpposite})`).matches &&
                    !localStorage.getItem('pref'))
            ) {
                document.documentElement.setAttribute('data-color-pref', colorModePrefOpposite);
            }

            function hexToHSL(H) {
            // Convert hex to RGB first
            let r = 0;
            let g = 0;
            let b = 0;
            if (H.length === 4) {
                r = `0x${H[1]}${H[1]}`;
                g = `0x${H[2]}${H[2]}`;
                b = `0x${H[3]}${H[3]}`;
            } else if (H.length === 7) {
                r = `0x${H[1]}${H[2]}`;
                g = `0x${H[3]}${H[4]}`;
                b = `0x${H[5]}${H[6]}`;
            }
            // Then to HSL
            r /= 255;
            g /= 255;
            b /= 255;
            const cmin = Math.min(r, g, b);
            const cmax = Math.max(r, g, b);
            const delta = cmax - cmin;
            let h = 0;
            let s = 0;
            let l = 0;

            if (delta === 0) {
                h = 0;
            } else if (cmax === r) {
                h = ((g - b) / delta) % 6;
            } else if (cmax === g) {
                h = (b - r) / delta + 2;
            } else {
                h = (r - g) / delta + 4;
            }

            h = Math.round(h * 60);

            if (h < 0) {
                h += 360;
            }

            l = (cmax + cmin) / 2;
            s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));
            s = +(s * 100).toFixed(1);
            l = +(l * 100).toFixed(1);

            return [h, s, l];
            }
            
            function generateColorPalette(e) {
                const hex = e?.target.value || document.documentElement.dataset.accentColor;

                const [h, s, l] = hexToHSL(hex);

                const complementary = h + 180 > 360 ? h - 180 : h + 180;
                document.documentElement.style.setProperty('--primary-h', h);
                document.documentElement.style.setProperty('--saturation', `${s}%`);
                document.documentElement.style.setProperty('--lightness', `${l}%`);
                document.documentElement.style.setProperty(
                    '--complementary-h',
                    complementary,
                );
            }
            
            generateColorPalette()
        </script>
        <script>
            const SEARCH_KEY = "{{@custom.search_key}}";
            const SEARCH_URL = "{{@custom.search_url}}";
        </script>

        {{!-- CSS and JS with asset helper--}}
        <link rel="stylesheet" href="{{asset 'built/app.css' hasMinFile='true'}}" />
        <script src="{{asset "built/app.js" hasMinFile='true'}}" defer></script>
        
        {{#is "post,page"}}
        {{!-- <link rel="stylesheet" href="{{asset 'built/post.css'}}"> --}}
        <script src="{{asset 'built/post.js' hasMinFile='true'}}" defer></script>
        <link rel="stylesheet" href="{{asset 'built/syntax-highlighting.css' hasMinFile='true'}}">
        <script src="{{asset 'built/syntax-highlighting.js' hasMinFile='true'}}" defer></script>
        {{/is}}

        {{!-- contentFor/block scripts - use with defer --}}
        {{{block "scripts"}}}

        {{!-- Outputs important meta data and settings, should always be in <head> --}}
        {{ghost_head}}
        
        {{#is "post,page"}}
        <link rel="stylesheet" href="{{asset '/built/ghost-cards.css' hasMinFile='true'}}">
        {{/is}}
    </head>

    <body class="{{body_class}}">

        {{{body}}}

        {{> "menu"}}

        {{!-- Outputs important scripts - should always be included before closing body tag --}}
        {{ghost_foot}}
    </body>
</html>